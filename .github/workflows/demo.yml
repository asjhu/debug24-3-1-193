name: 'PWS GitHub Actions'
on:
  - pull_request
  - push
env:
  TF_Action: apply # apply Or destroy are your options #
jobs:
  pws:
    name: 'PWS'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@main
      - name: BeyondTrust-GA
        id: bt_secret
        uses: BeyondTrust/secrets-safe-action@v1
        with:
          SECRET_PATH: '[{"path": "GitHub - BTSolution-Engineering/iac_project2/AWS_ClientID","output_id": "AWS_ClientID"},
                         {"path": "GitHub - BTSolution-Engineering/iac_project2/AWS_ClientSecret","output_id": "AWS_Client-Secret"}, 
                         {"path": "GitHub - BTSolution-Engineering/iac_project2/Sra-Client-Id","output_id": "Sra-Client-Id"}, 
                         {"path": "GitHub - BTSolution-Engineering/iac_project2/Sra-Client-Secret","output_id": "Sra-Client-Secret"},
                         {"path": "GitHub - BTSolution-Engineering/iac_project2/Entra_Tenant_Join","output_id": "Entra_Tenant_Join"},
                         {"path": "GitHub - BTSolution-Engineering/iac_project2/EPMLC-Join","output_id": "EPMLC-Join"}
                         ]'

        env:
          API_URL: ${{ secrets.API_URL }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}


      - name: print secrets
        env:
          MY_SECRET: ${{ steps.bt_secret.outputs.Entra_Tenant_Join }}
        shell: bash
        run: |
              echo "$MY_SECRET" >> adb.tf

      - name: 'Terraform Init'
        id: init
        run: terraform init -backend-config="access_key=${{ steps.bt_secret.outputs.AWS_ClientID }}" -backend-config="secret_key=${{ steps.bt_secret.outputs.AWS_Client-Secret }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Terraform Validate'
        id: validate
        run: terraform validate

      - name: 'Terraform Plan'
        id: plan
        run: terraform plan 
        continue-on-error: true 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_BT_CLIENT_ID: ${{ steps.bt_secret.outputs.Sra-Client-Id }}
          TF_VAR_BT_CLIENT_SECRET: ${{ steps.bt_secret.outputs.Sra-Client-Secret }}
          TF_VAR_AWS_CLIENT_ID: ${{ steps.bt_secret.outputs.AWS_ClientID }}
          TF_VAR_AWS_CLIENT_SECRET: ${{ steps.bt_secret.outputs.AWS_Client-Secret }}
          TF_VAR_Entra_Tenant_Join: ${{ steps.bt_secret.outputs.Entra_Tenant_Join }}
          TF_VAR_EPMLC-Join: ${{ steps.bt_secret.outputs.EPMLC-Join }}


      - name: Terraform Action (Apply / Destroy)
        id: apply
        run: terraform $TF_Action -auto-approve
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_BT_CLIENT_ID: ${{ steps.bt_secret.outputs.Sra-Client-Id }}
          TF_VAR_BT_CLIENT_SECRET: ${{ steps.bt_secret.outputs.Sra-Client-Secret }}
          TF_VAR_AWS_CLIENT_ID: ${{ steps.bt_secret.outputs.AWS_ClientID }}
          TF_VAR_AWS_CLIENT_SECRET: ${{ steps.bt_secret.outputs.AWS_Client-Secret }}
          TF_VAR_Entra_Tenant_Join: ${{ steps.bt_secret.outputs.AWS_Entra_Tenant_Join }}
          TF_VAR_EPMLC-Join: ${{ steps.bt_secret.outputs.EPMLC-Join }}
